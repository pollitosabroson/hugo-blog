<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alejandro Rosales</title>
    <link>https://pollitosabroson.gitlab.io/</link>
    <description>Recent content on Alejandro Rosales</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Code released under the Apache 2.0 license.</copyright>
    <lastBuildDate>Sun, 28 Aug 2016 12:30:14 +0200</lastBuildDate>
    <atom:link href="https://pollitosabroson.gitlab.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Statistics Videogames 2016</title>
      <link>https://pollitosabroson.gitlab.io/post/all-games-years/</link>
      <pubDate>Sun, 28 Aug 2016 12:30:14 +0200</pubDate>
      
      <guid>https://pollitosabroson.gitlab.io/post/all-games-years/</guid>
      <description>&lt;p&gt;&lt;div id=&#34;container&#34; style=&#34;width: 100%;&#34;&gt;
    &lt;canvas id=&#34;canvas&#34;&gt;&lt;/canvas&gt;
    &lt;canvas id=&#34;pieChart&#34;&gt;&lt;/canvas&gt;
    &lt;table class=&#34;table table-hover&#34;&gt;
        &lt;thead&gt;
            &lt;tr&gt;
                &lt;th&gt;#&lt;/th&gt;
                &lt;th&gt;Month&lt;/th&gt;
                &lt;th&gt;Total Games&lt;/th&gt;
                &lt;th&gt;Percentage&lt;/th&gt;
            &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody id=&#34;totalMonth&#34;&gt;
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;
VIA &lt;a href=&#34;https://en.wikipedia.org/wiki/2016_in_video_gaming#endnote_Published&#34;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
  // Initialize Firebase
    var months = [&#34;January&#34;, &#34;February&#34;, &#34;March&#34;, &#34;April&#34;, &#34;May&#34;, &#34;June&#34;, &#34;July&#34;, &#34;August&#34;, &#34;September&#34;, &#34;October&#34;, &#34;November&#34;, &#34;December&#34;,]
    var config = {
    apiKey: &#34;AIzaSyC2m_Y0FIpXRm-3X0HVZL00iTnY1tc-1jI&#34;,
    authDomain: &#34;games-d7880.firebaseapp.com&#34;,
    databaseURL: &#34;https://games-d7880.firebaseio.com&#34;,
    storageBucket: &#34;games-d7880.appspot.com&#34;,
    };
    firebase.initializeApp(config);
    var database = firebase.database();
    firebase.database().ref(&#39;count_mount&#39;).on(&#39;value&#39;, function(snapshot) {
        var key = Object.keys(snapshot.val())[0];
        var total = snapshot.val()[key].reduce(function(a, b) { return a + b; }, 0);
        var ctx = document.getElementById(&#34;canvas&#34;).getContext(&#34;2d&#34;);
        var data = {
            labels: months,
            datasets: [
                {
                    label: &#34;Launched In The Month Game&#34;,
                    backgroundColor: [
                        &#39;#80FF00&#39;,
                        &#39;#0000FF&#39;,
                        &#39;#FF8000&#39;,
                        &#39;#FFFF00&#39;,
                        &#39;#00FF00&#39;,
                        &#39;#0080FF&#39;,
                        &#39;#8000FF&#39;,
                        &#39;#FF00FF&#39;,
                        &#39;#FF0080&#39;,
                        &#39;#00FF80&#39;,
                        &#39;#C207A0&#39;,
                        &#39;#2B2626&#39;,
                    ],
                    borderColor: [
                        &#39;#80FF00&#39;,
                        &#39;#0000FF&#39;,
                        &#39;#FF8000&#39;,
                        &#39;#FFFF00&#39;,
                        &#39;#00FF00&#39;,
                        &#39;#0080FF&#39;,
                        &#39;#8000FF&#39;,
                        &#39;#FF00FF&#39;,
                        &#39;#FF0080&#39;,
                        &#39;#00FF80&#39;,
                        &#39;#C207A0&#39;,
                        &#39;#2B2626&#39;,
                    ],
                    borderWidth: 1,
                    data: snapshot.val()[key],
                }
            ]
        };
        var options = {
            // Elements options apply to all of the options unless overridden in a dataset
            // In this case, we are setting the border of each bar to be 2px wide and green
            elements: {
                rectangle: {
                    borderWidth: 2,
                    borderColor: &#39;rgb(0, 255, 0)&#39;,
                    borderSkipped: &#39;bottom&#39;
                }
            },
            responsive: true,
            title: {
                display: true,
                text: &#39;Total Games Released A Month&#39;
            }
        }
        var myBarChart = new Chart(ctx, {
            type: &#39;bar&#39;,
            data: data,
            options: options
        });
        $.each(snapshot.val()[key], function(index, value) {
            var percentage = 0;
            var number = index + 1
            if (value != 0){
                percentage = Math.round((value / total) * 100)
            }
            $(&#39;#totalMonth&#39;).append(&#39;&lt;tr&gt;&lt;th scope=&#34;row&#34;&gt;&#39; + number+ &#39;&lt;/th&gt; &lt;td&gt;&#39; + months[index]  + &#39;&lt;/td&gt; &lt;td&gt;&#39; + value + &#39;&lt;/td&gt;&lt;td&gt; &#39; + percentage + &#39;%&lt;/td&gt;&lt;/tr&gt;&#39;)
        })
        var options = {
            // Elements options apply to all of the options unless overridden in a dataset
            // In this case, we are setting the border of each bar to be 2px wide and green
            elements: {
                rectangle: {
                    borderWidth: 2,
                    borderColor: &#39;rgb(0, 255, 0)&#39;,
                    borderSkipped: &#39;bottom&#39;
                }
            },
            responsive: true,
            title: {
                display: true,
                text: &#39;Total Games Released A Month&#39;
            },
            tooltips: {
                callbacks: {
                    label: function(tooltipItem, data) {
                        var allData = data.datasets[tooltipItem.datasetIndex].data;
                        var tooltipLabel = data.labels[tooltipItem.index];
                        var tooltipData = allData[tooltipItem.index];
                        var total = 0;
                        for (var i in allData) {
                            total += allData[i];
                        }
                        var tooltipPercentage = Math.round((tooltipData / total) * 100);
                        return tooltipLabel + &#39;: &#39; + tooltipData + &#39; (&#39; + tooltipPercentage + &#39;%)&#39;;
                    }
                }
            }
        }
        var PieChart = document.getElementById(&#34;pieChart&#34;).getContext(&#34;2d&#34;);
        var myPieChart = new Chart(PieChart, {
            type: &#39;pie&#39;,
            data: data,
            options: options
        });
    });
    firebase.database().ref(&#39;games_month&#39;).on(&#39;value&#39;, function(snapshot) {
        var result = snapshot.val();
        var key = Object.keys(result)[0];
        $.each(months, function(index, values) {
            $(&#39;#container&#39;).append(&#39;&lt;canvas id=&#34;&#39; + values + &#39;&#34;&gt;&lt;/canvas&gt;&#39;);
            $(&#39;#container&#39;).append(&#39;&lt;table class=&#34;table table-hover&#34;&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Day&lt;/th&gt;&lt;th&gt;Total&lt;/th&gt;&lt;th&gt;Game&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody id=&#34;totalMonth&#39; + values + &#39;&#34;&gt;&lt;/tbody&gt;&lt;/table&gt;&#39;)
            var labels = [], dataChart = [];
            $.each(result[key][values.toUpperCase()], function(position, val){
                if (result[key][values.toUpperCase()][position] != undefined) {
                    labels.push(position)
                    dataChart.push(result[key][values.toUpperCase()][position].length)
                    $(&#39;#totalMonth&#39; + values).append(&#39;&lt;tr&gt;&lt;td&gt;&#39; + position  + &#39;&lt;/td&gt;&lt;td&gt; &#39; + result[key][values.toUpperCase()][position].length + &#39;&lt;/td&gt;&lt;td&gt;&#39; + result[key][values.toUpperCase()][position].join(&#39;, &#39;) + &#39;&lt;/td&gt;&lt;/tr&gt;&#39;)

                }
            });
            var ctx = document.getElementById( values ).getContext(&#34;2d&#34;);
            var data = {
                labels: labels,
                datasets: [
                    {
                        label: &#34;Launched In The Month &#34; + values,
                        backgroundColor: [
                            &#34;#3D3551&#34;, &#34;#884EA2&#34;, &#34;#EA648D&#34;, &#34;#FFFC3A&#34;, &#34;#03414D&#34;, &#34;#72DFD0&#34;, &#34;#A0F6D2&#34;, &#34;#EF7079&#34;, &#34;#BF382A&#34;, &#34;#683531&#34;, &#34;#6D0AD3&#34;, &#34;#0098EF&#34;, &#34;#00CF95&#34;, &#34;#D1FFA2&#34;, &#34;#2F3032&#34;, &#34;#383A56&#34;, &#34;#B0A565&#34;, &#34;#EDE68A&#34;, &#34;#01005E&#34;, &#34;#22267B&#34;, &#34;#28518A&#34;, &#34;#17B794&#34;, &#34;#B062EA&#34;, &#34;#F392F2&#34;, &#34;#FED08F&#34;, &#34;#F6F39F&#34;, &#34;#283739&#34;, &#34;#2C5D63&#34;, &#34;#A2C11C&#34;, &#34;#E0E0E0&#34;, &#34;#312F44&#34;,
                        ],
                        borderColor: [
                            &#34;#3D3551&#34;, &#34;#884EA2&#34;, &#34;#EA648D&#34;, &#34;#FFFC3A&#34;, &#34;#03414D&#34;, &#34;#72DFD0&#34;, &#34;#A0F6D2&#34;, &#34;#EF7079&#34;, &#34;#BF382A&#34;, &#34;#683531&#34;, &#34;#6D0AD3&#34;, &#34;#0098EF&#34;, &#34;#00CF95&#34;, &#34;#D1FFA2&#34;, &#34;#2F3032&#34;, &#34;#383A56&#34;, &#34;#B0A565&#34;, &#34;#EDE68A&#34;, &#34;#01005E&#34;, &#34;#22267B&#34;, &#34;#28518A&#34;, &#34;#17B794&#34;, &#34;#B062EA&#34;, &#34;#F392F2&#34;, &#34;#FED08F&#34;, &#34;#F6F39F&#34;, &#34;#283739&#34;, &#34;#2C5D63&#34;, &#34;#A2C11C&#34;, &#34;#E0E0E0&#34;, &#34;#312F44&#34;,
                        ],
                        borderWidth: 1,
                        data: dataChart,
                    }
                ]
            };
            var options = {
                // Elements options apply to all of the options unless overridden in a dataset
                // In this case, we are setting the border of each bar to be 2px wide and green
                elements: {
                    rectangle: {
                        borderWidth: 2,
                        borderColor: &#39;rgb(0, 255, 0)&#39;,
                        borderSkipped: &#39;bottom&#39;
                    }
                },
                responsive: true,
                title: {
                    display: true,
                    text: &#39;Total Games Released A &#39; +  values
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
            var myBarChart = new Chart(ctx, {
                type: &#39;bar&#39;,
                data: data,
                options: options
            });
        })

    });
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>100 metres at the Olympics</title>
      <link>https://pollitosabroson.gitlab.io/post/good-to-great/</link>
      <pubDate>Sun, 24 May 2015 18:53:17 +0200</pubDate>
      
      <guid>https://pollitosabroson.gitlab.io/post/good-to-great/</guid>
      <description>&lt;div style=&#34;width:100%;&#34;id=&#34;&#34;&gt;
    &lt;canvas id=&#34;canvasMan&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;

&lt;div style=&#34;width:100%;&#34;id=&#34;&#34;&gt;
    &lt;canvas id=&#34;canvasWomen&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;

&lt;div style=&#34;width:100%;&#34;id=&#34;&#34;&gt;
    &lt;canvas id=&#34;canvasVS&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;

&lt;script type=&#34;text/javascript&#34;&gt;
    $( document ).ready(function() {
        var city_all = [&#39;Athens&#39;, &#39;Paris&#39;, &#39;St. Louis&#39;, &#39;London&#39;, &#39;Stockholm&#39;, &#39;Antwerp&#39;, &#39;Paris&#39;, &#39;Amsterdam&#39;, &#39;Los Angeles&#39;, &#39;Berlin&#39;, &#39;London&#39;, &#39;Helsinki&#39;, &#39;Melbourne&#39;, &#39;Rome&#39;, &#39;Tokyo&#39;, &#39;Mexico City&#39;, &#39;Munich&#39;, &#39;Montreal&#39;, &#39;Moscow&#39;, &#39;Los Angeles&#39;, &#39;Seoul&#39;, &#39;Barcelona&#39;, &#39;Atlanta&#39;, &#39;Sydney&#39;, &#39;Athens&#39;, &#39;Beijing&#39;, &#39;London&#39;, &#39;Rio de Janeiro&#39;]

        var run_man = [&#39;Thomas Burke&#39;, &#39;Frank Jarvis&#39;, &#39;Archie Hahn&#39;, &#39;Reggie Walker&#39;, &#39;Ralph Craig&#39;, &#39;Charley Paddock &#39;, &#39;Harold Abrahams&#39;, &#39;Percy Williams&#39;, &#39;Eddie Tolan&#39;, &#39;Jesse Owens&#39;, &#39;Harrison Dillard&#39;, &#39;Lindy Remigino&#39;, &#39;Bobby Morrow&#39;, &#39;Armin Hary&#39;, &#39;Bob Hayes&#39;, &#39;Jim Hines&#39;, &#39;Valeriy Borzov&#39;, &#39;Hasely Crawford&#39;, &#39;Allan Wells&#39;, &#39;Carl Lewis&#39;, &#39;Carl Lewis&#39;, &#39;Linford Christie&#39;, &#39;Donovan Bailey&#39;, &#39;Maurice Greene&#39;, &#39;Justin Gatlin&#39;, &#39;Usain Bolt&#39;, &#39;Usain Bolt&#39;, &#39;Usain Bolt&#39;]

        var manNationality = [&#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;South Africa&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;Great Britain&#39;, &#39;Canada&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;Germany&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;Soviet Union&#39;, &#39;Trinidad and Tobago&#39;, &#39;Great Britain&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;GBR&#39;, &#39;Canada&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;Jamaica&#39;, &#39;Jamaica&#39;, &#39;Jamaica&#39;]

        var extasMan = [&#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Equal Olympic Record&#39;, &#39;Equal Olympic Record&#39;, &#39;Nothing&#39;, &#39;Equal World Record&#39;, &#39;Nothing&#39;, &#39;Equal Olympic Record&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Equal Olympic Record&#39;, &#39;Equal Olympic Record&#39;, &#39;Equal World Record&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;World Record&#39;, &#39;Nothing&#39;, &#39;World Record&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;World Record&#39;, &#39;Olympic Record&#39;, &#34;Season&#39;s Best&#34;]

        var city_women = [&#39;Amsterdam&#39;, &#39;Los Angeles&#39;, &#39;Berlin&#39;, &#39;London&#39;, &#39;Helsinki&#39;, &#39;Melbourne&#39;, &#39;Rome&#39;, &#39;Tokyo&#39;, &#39;Mexico City&#39;, &#39;Munich&#39;, &#39;Montreal&#39;, &#39;Moscow&#39;, &#39;Los Angeles&#39;, &#39;Seoul&#39;, &#39;Barcelona&#39;, &#39;Atlanta&#39;, &#39;Sydney&#39;, &#39;Athens&#39;, &#39;Beijing&#39;, &#39;London&#39;, &#39;Rio de Janeiro&#39;]

        var run_woman = [&#39;Betty Robinson&#39;, &#39;Stanisława Walasiewicz&#39;, &#39;Helen Stephens&#39;, &#39;Fanny Blankers-Koen&#39;, &#39;Marjorie Jackson&#39;, &#39;Betty Cuthbert&#39;, &#39;Wilma Rudolph&#39;, &#39;Wyomia Tyus&#39;, &#39;Wyomia Tyus&#39;, &#39;Renate Stecher&#39;, &#39;Annegret Richter&#39;, &#39;Lyudmila Kondratyeva&#39;, &#39;Evelyn Ashford&#39;, &#39;Florence Griffith-Joyner&#39;, &#39;Gail Devers&#39;, &#39;Gail Devers&#39;, &#39;None&#39;, &#39;Yulia Nestsiarenka&#39;, &#39;Shelly-Ann Fraser&#39;, &#39;Shelly-Ann Fraser-Pryce&#39;, &#39;Elaine Thompson&#39;]

        var womenNationality = [&#39;United States&#39;, &#39;Poland&#39;, &#39;United States&#39;, &#39;Netherlands&#39;, &#39;Australia&#39;, &#39;Australia&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;East Germany&#39;, &#39;West Germany&#39;, &#39;URS&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;United States&#39;, &#39;None&#39;, &#39;Belarus&#39;, &#39;Jamaica&#39;, &#39;Jamaica&#39;, &#39;Jamaica&#39;]

        var extrasWomen = [&#39;Equal World Record&#39;, &#39;Equal World Record&#39;, &#39;Nothing&#39;, &#39;Equal Olympic Record&#39;, &#39;Equal World Record&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;World Record&#39;, &#39;World Record&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;, &#39;Nothing&#39;]

        var configMan = {
            type: &#39;line&#39;,
            data: {
                labels: [&#39;1896&#39;, &#39;1900&#39;, &#39;1904&#39;, &#39;1908&#39;, &#39;1912&#39;, &#39;1920&#39;, &#39;1924&#39;, &#39;1928&#39;, &#39;1932&#39;, &#39;1936&#39;, &#39;1948&#39;, &#39;1952&#39;, &#39;1956&#39;, &#39;1960&#39;, &#39;1964&#39;, &#39;1968&#39;, &#39;1972&#39;, &#39;1976&#39;, &#39;1980&#39;, &#39;1984&#39;, &#39;1988&#39;, &#39;1992&#39;, &#39;1996&#39;, &#39;2000&#39;, &#39;2004&#39;, &#39;2008&#39;, &#39;2012&#39;, &#39;2016&#39;],
                datasets: [{
                    label: &#34;Time&#34;,
                    data: [12.0, 11.0, 11.0, 10.8, 10.8, 10.6, 10.6, 10.8, 10.38, 10.3, 10.3, 10.79, 10.5, 10.2, 10.0, 9.9, 10.14, 10.06, 10.25, 9.99, 9.92, 9.96, 9.84, 9.87, 9.85, 9.69, 9.63, 9.81],
                    lineTension: 0,
                    fill: false,
                    backgroundColor: &#34;#3333ff&#34;,
                    borderColor: &#34;#3333ff&#34;
                }]
            },
            options: {
                responsive: true,
                tooltips: {
                    mode: &#39;label&#39;,
                    callbacks: {
                        beforeTitle: function(tooltipItems, data) {
                            return &#39;City: &#39; + city_all[tooltipItems[0].index];
                        },
                        beforeBody: function(data) {
                            var multistringText = [&#39;Runner: &#39; + run_man[data[0].index]];
                            multistringText.push(&#39;Nationality: &#39;+ manNationality[data[0].index]);
                            multistringText.push(&#39;Extra: &#39;+ extasMan[data[0].index]);
                            return multistringText
                        }
                    }
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: &#39;Year&#39;
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: &#39;Time Seconds&#39;
                        }
                    }]
                },
                title: {
                    display: true,
                    text: &#39;100 metres at the Olympics&#39;
                },
            }
        };
         var configWoman = {
            type: &#39;line&#39;,
            data: {
                labels: [&#39;1928&#39;, &#39;1932&#39;, &#39;1936&#39;, &#39;1948&#39;, &#39;1952&#39;, &#39;1956&#39;, &#39;1960&#39;, &#39;1964&#39;, &#39;1968&#39;, &#39;1972&#39;, &#39;1976&#39;, &#39;1980&#39;, &#39;1984&#39;, &#39;1988&#39;, &#39;1992&#39;, &#39;1996&#39;, &#39;2000&#39;, &#39;2004&#39;, &#39;2008&#39;, &#39;2012&#39;, &#39;2016&#39;],
                datasets: [{
                    label: &#34;Time&#34;,
                    data: [12.2, 11.9, 11.5, 11.9, 11.5, 11.5, 11.18, 11.4, 11.0, 11.07, 11.08, 11.06, 10.97, 10.54, 10.82, 10.94, null, 10.93, 10.7, 10.75, 10.71],
                    lineTension: 0,
                    fill: false,
                    backgroundColor: &#34;#8a00e6&#34;,
                    borderColor: &#34;#8a00e6&#34;
                }
                ]
            },
            options: {
                responsive: true,
                tooltips: {
                    mode: &#39;label&#39;,
                    callbacks: {
                        beforeTitle: function(tooltipItems, data) {
                            return &#39;City: &#39; + city_women[tooltipItems[0].index];
                        },
                        beforeBody: function(data) {
                            var multistringText = [&#39;Runner: &#39; + run_woman[data[0].index]];
                            multistringText.push(&#39;Nationality: &#39;+ womenNationality[data[0].index]);
                            multistringText.push(&#39;Extra: &#39;+ extrasWomen[data[0].index]);
                            return multistringText
                        }
                    }
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: &#39;Year&#39;
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: &#39;Time&#39;
                        }
                    }]
                },
                title: {
                    display: true,
                    text: &#39;100 metres at the Olympics&#39;
                }
            }
        };

        var configVS = {
            type: &#39;line&#39;,
            data: {
                labels: [&#39;1896&#39;, &#39;1900&#39;, &#39;1904&#39;, &#39;1908&#39;, &#39;1912&#39;, &#39;1920&#39;, &#39;1924&#39;, &#39;1928&#39;, &#39;1932&#39;, &#39;1936&#39;, &#39;1948&#39;, &#39;1952&#39;, &#39;1956&#39;, &#39;1960&#39;, &#39;1964&#39;, &#39;1968&#39;, &#39;1972&#39;, &#39;1976&#39;, &#39;1980&#39;, &#39;1984&#39;, &#39;1988&#39;, &#39;1992&#39;, &#39;1996&#39;, &#39;2000&#39;, &#39;2004&#39;, &#39;2008&#39;, &#39;2012&#39;, &#39;2016&#39;],
                datasets: [{
                    label: &#34;Men&#34;,
                    data: [12.0, 11.0, 11.0, 10.8, 10.8, 10.6, 10.6, 10.8, 10.38, 10.3, 10.3, 10.79, 10.5, 10.2, 10.0, 9.9, 10.14, 10.06, 10.25, 9.99, 9.92, 9.96, 9.84, 9.87, 9.85, 9.69, 9.63, 9.81],
                    lineTension: 0,
                    fill: false,
                    backgroundColor: &#34;#3333ff&#34;,
                    borderColor: &#34;#3333ff&#34;
                },{
                    label: &#34;Woman&#34;,
                    data: [null, null, null, null, null, null, null, 12.2, 11.9, 11.5, 11.9, 11.5, 11.5, 11.18, 11.4, 11.0, 11.07, 11.08, 11.06, 10.97, 10.54, 10.82, 10.94, null, 10.93, 10.7, 10.75, 10.71],
                    lineTension: 0,
                    fill: false,
                    backgroundColor: &#34;#8a00e6&#34;,
                    borderColor: &#34;#8a00e6&#34;
                }
                ]
            },
            options: {
                responsive: true,
                hover: {
                    mode: &#39;label&#39;
                },
                scales: {
                    xAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: &#39;Year&#39;
                        }
                    }],
                    yAxes: [{
                        display: true,
                        scaleLabel: {
                            display: true,
                            labelString: &#39;Time&#39;
                        }
                    }]
                },
                title: {
                    display: true,
                    text: &#39;100 metres at the Olympics&#39;
                }
            }
        };

        window.onload = function() {
            var man = document.getElementById(&#34;canvasMan&#34;).getContext(&#34;2d&#34;);
            window.myLine = new Chart(man, configMan);

            var woman = document.getElementById(&#34;canvasWomen&#34;).getContext(&#34;2d&#34;);
            window.myLine = new Chart(woman, configWoman);

            var VS = document.getElementById(&#34;canvasVS&#34;).getContext(&#34;2d&#34;);
            window.myLine = new Chart(VS, configVS);
        };
    });
&lt;/script&gt;
</description>
    </item>
    
  </channel>
</rss>